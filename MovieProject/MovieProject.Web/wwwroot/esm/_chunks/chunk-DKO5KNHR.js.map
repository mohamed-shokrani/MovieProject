{
  "version": 3,
  "sources": ["../../../Modules/ServerTypes/Northwind/OrderDetailsColumns.ts", "../../../Modules/ServerTypes/Northwind/OrderDetailsExtendedColumns.ts", "../../../Modules/ServerTypes/Northwind/OrderDetailsExtendedRow.ts", "../../../Modules/ServerTypes/Northwind/OrderDetailsExtendedService.ts", "../../../Modules/ServerTypes/Northwind/OrderDetailsRow.ts", "../../../Modules/ServerTypes/Northwind/OrderDetailsService.ts", "../../../Modules/ServerTypes/Northwind/OrdersColumns.ts", "../../../Modules/ServerTypes/Northwind/OrdersQryColumns.ts", "../../../Modules/ServerTypes/Northwind/OrdersQryRow.ts", "../../../Modules/ServerTypes/Northwind/OrdersQryService.ts", "../../../Modules/ServerTypes/Northwind/OrdersRow.ts", "../../../Modules/ServerTypes/Northwind/OrdersService.ts", "../../../Modules/ServerTypes/Northwind/OrderSubtotalsColumns.ts", "../../../Modules/ServerTypes/Northwind/OrderSubtotalsRow.ts", "../../../Modules/ServerTypes/Northwind/OrderSubtotalsService.ts", "../../../Modules/ServerTypes/Northwind/SalesInvoiceColumns.ts", "../../../Modules/ServerTypes/Northwind/SalesInvoiceItemsColumns.ts", "../../../Modules/ServerTypes/Northwind/SalesInvoiceItemsRow.ts", "../../../Modules/ServerTypes/Northwind/SalesInvoiceItemsService.ts", "../../../Modules/ServerTypes/Northwind/SalesInvoiceRow.ts", "../../../Modules/ServerTypes/Northwind/SalesInvoiceService.ts", "../../../Modules/ServerTypes/Northwind/OrderDetailsExtendedForm.ts", "../../../Modules/ServerTypes/Northwind/OrderDetailsForm.ts", "../../../Modules/ServerTypes/Northwind/OrdersForm.ts", "../../../Modules/ServerTypes/Northwind/OrdersQryForm.ts", "../../../Modules/ServerTypes/Northwind/OrderSubtotalsForm.ts", "../../../Modules/ServerTypes/Northwind/SalesInvoiceForm.ts", "../../../Modules/ServerTypes/Northwind/SalesInvoiceItemsForm.ts"],
  "sourcesContent": ["\uFEFFimport { ColumnsBase, fieldsProxy } from \"@serenity-is/corelib\";\nimport { Column } from \"@serenity-is/sleekgrid\";\nimport { OrderDetailsRow } from \"./OrderDetailsRow\";\n\nexport interface OrderDetailsColumns {\n    OrderCustomerId: Column<OrderDetailsRow>;\n    ProductName: Column<OrderDetailsRow>;\n    UnitPrice: Column<OrderDetailsRow>;\n    Quantity: Column<OrderDetailsRow>;\n    Discount: Column<OrderDetailsRow>;\n    DetailId: Column<OrderDetailsRow>;\n}\n\nexport class OrderDetailsColumns extends ColumnsBase<OrderDetailsRow> {\n    static readonly columnsKey = 'Northwind.OrderDetails';\n    static readonly Fields = fieldsProxy<OrderDetailsColumns>();\n}", "\uFEFFimport { ColumnsBase, fieldsProxy } from \"@serenity-is/corelib\";\nimport { Column } from \"@serenity-is/sleekgrid\";\nimport { OrderDetailsExtendedRow } from \"./OrderDetailsExtendedRow\";\n\nexport interface OrderDetailsExtendedColumns {\n    OrderId: Column<OrderDetailsExtendedRow>;\n    ProductId: Column<OrderDetailsExtendedRow>;\n    ProductName: Column<OrderDetailsExtendedRow>;\n    UnitPrice: Column<OrderDetailsExtendedRow>;\n    Quantity: Column<OrderDetailsExtendedRow>;\n    Discount: Column<OrderDetailsExtendedRow>;\n    ExtendedPrice: Column<OrderDetailsExtendedRow>;\n}\n\nexport class OrderDetailsExtendedColumns extends ColumnsBase<OrderDetailsExtendedRow> {\n    static readonly columnsKey = 'Northwind.OrderDetailsExtended';\n    static readonly Fields = fieldsProxy<OrderDetailsExtendedColumns>();\n}", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib\";\n\nexport interface OrderDetailsExtendedRow {\n    OrderId?: number;\n    ProductId?: number;\n    ProductName?: string;\n    UnitPrice?: number;\n    Quantity?: number;\n    Discount?: number;\n    ExtendedPrice?: number;\n}\n\nexport abstract class OrderDetailsExtendedRow {\n    static readonly idProperty = 'OrderId';\n    static readonly nameProperty = 'ProductName';\n    static readonly localTextPrefix = 'Northwind.OrderDetailsExtended';\n    static readonly deletePermission = 'Administration:General';\n    static readonly insertPermission = 'Administration:General';\n    static readonly readPermission = 'Administration:General';\n    static readonly updatePermission = 'Administration:General';\n\n    static readonly Fields = fieldsProxy<OrderDetailsExtendedRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib\";\nimport { OrderDetailsExtendedRow } from \"./OrderDetailsExtendedRow\";\n\nexport namespace OrderDetailsExtendedService {\n    export const baseUrl = 'Northwind/OrderDetailsExtended';\n\n    export declare function Create(request: SaveRequest<OrderDetailsExtendedRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): PromiseLike<SaveResponse>;\n    export declare function Update(request: SaveRequest<OrderDetailsExtendedRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): PromiseLike<SaveResponse>;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): PromiseLike<DeleteResponse>;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<OrderDetailsExtendedRow>) => void, opt?: ServiceOptions<any>): PromiseLike<RetrieveResponse<OrderDetailsExtendedRow>>;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<OrderDetailsExtendedRow>) => void, opt?: ServiceOptions<any>): PromiseLike<ListResponse<OrderDetailsExtendedRow>>;\n\n    export const Methods = {\n        Create: \"Northwind/OrderDetailsExtended/Create\",\n        Update: \"Northwind/OrderDetailsExtended/Update\",\n        Delete: \"Northwind/OrderDetailsExtended/Delete\",\n        Retrieve: \"Northwind/OrderDetailsExtended/Retrieve\",\n        List: \"Northwind/OrderDetailsExtended/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>OrderDetailsExtendedService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib\";\n\nexport interface OrderDetailsRow {\n    OrderId?: number;\n    ProductId?: number;\n    UnitPrice?: number;\n    Quantity?: number;\n    Discount?: number;\n    DetailId?: number;\n    OrderCustomerId?: string;\n    ProductName?: string;\n}\n\nexport abstract class OrderDetailsRow {\n    static readonly idProperty = 'DetailId';\n    static readonly localTextPrefix = 'Northwind.OrderDetails';\n    static readonly deletePermission = 'Administration:General';\n    static readonly insertPermission = 'Administration:General';\n    static readonly readPermission = 'Administration:General';\n    static readonly updatePermission = 'Administration:General';\n\n    static readonly Fields = fieldsProxy<OrderDetailsRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib\";\nimport { OrderDetailsRow } from \"./OrderDetailsRow\";\n\nexport namespace OrderDetailsService {\n    export const baseUrl = 'Northwind/OrderDetails';\n\n    export declare function Create(request: SaveRequest<OrderDetailsRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): PromiseLike<SaveResponse>;\n    export declare function Update(request: SaveRequest<OrderDetailsRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): PromiseLike<SaveResponse>;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): PromiseLike<DeleteResponse>;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<OrderDetailsRow>) => void, opt?: ServiceOptions<any>): PromiseLike<RetrieveResponse<OrderDetailsRow>>;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<OrderDetailsRow>) => void, opt?: ServiceOptions<any>): PromiseLike<ListResponse<OrderDetailsRow>>;\n\n    export const Methods = {\n        Create: \"Northwind/OrderDetails/Create\",\n        Update: \"Northwind/OrderDetails/Update\",\n        Delete: \"Northwind/OrderDetails/Delete\",\n        Retrieve: \"Northwind/OrderDetails/Retrieve\",\n        List: \"Northwind/OrderDetails/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>OrderDetailsService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFimport { ColumnsBase, fieldsProxy } from \"@serenity-is/corelib\";\nimport { Column } from \"@serenity-is/sleekgrid\";\nimport { OrdersRow } from \"./OrdersRow\";\n\nexport interface OrdersColumns {\n    OrderId: Column<OrdersRow>;\n    CustomerCompanyName: Column<OrdersRow>;\n    EmployeeFullName: Column<OrdersRow>;\n    OrderDate: Column<OrdersRow>;\n    RequiredDate: Column<OrdersRow>;\n    ShippedDate: Column<OrdersRow>;\n    ShipViaCompanyName: Column<OrdersRow>;\n    Freight: Column<OrdersRow>;\n    ShipName: Column<OrdersRow>;\n    ShipAddress: Column<OrdersRow>;\n    ShipCity: Column<OrdersRow>;\n    ShipRegion: Column<OrdersRow>;\n    ShipPostalCode: Column<OrdersRow>;\n    ShipCountry: Column<OrdersRow>;\n}\n\nexport class OrdersColumns extends ColumnsBase<OrdersRow> {\n    static readonly columnsKey = 'Northwind.Orders';\n    static readonly Fields = fieldsProxy<OrdersColumns>();\n}", "\uFEFFimport { ColumnsBase, fieldsProxy } from \"@serenity-is/corelib\";\nimport { Column } from \"@serenity-is/sleekgrid\";\nimport { OrdersQryRow } from \"./OrdersQryRow\";\n\nexport interface OrdersQryColumns {\n    OrderId: Column<OrdersQryRow>;\n    CustomerId: Column<OrdersQryRow>;\n    EmployeeId: Column<OrdersQryRow>;\n    OrderDate: Column<OrdersQryRow>;\n    RequiredDate: Column<OrdersQryRow>;\n    ShippedDate: Column<OrdersQryRow>;\n    ShipVia: Column<OrdersQryRow>;\n    Freight: Column<OrdersQryRow>;\n    ShipName: Column<OrdersQryRow>;\n    ShipAddress: Column<OrdersQryRow>;\n    ShipCity: Column<OrdersQryRow>;\n    ShipRegion: Column<OrdersQryRow>;\n    ShipPostalCode: Column<OrdersQryRow>;\n    ShipCountry: Column<OrdersQryRow>;\n    CompanyName: Column<OrdersQryRow>;\n    Address: Column<OrdersQryRow>;\n    City: Column<OrdersQryRow>;\n    Region: Column<OrdersQryRow>;\n    PostalCode: Column<OrdersQryRow>;\n    Country: Column<OrdersQryRow>;\n}\n\nexport class OrdersQryColumns extends ColumnsBase<OrdersQryRow> {\n    static readonly columnsKey = 'Northwind.OrdersQry';\n    static readonly Fields = fieldsProxy<OrdersQryColumns>();\n}", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib\";\n\nexport interface OrdersQryRow {\n    OrderId?: number;\n    CustomerId?: string;\n    EmployeeId?: number;\n    OrderDate?: string;\n    RequiredDate?: string;\n    ShippedDate?: string;\n    ShipVia?: number;\n    Freight?: number;\n    ShipName?: string;\n    ShipAddress?: string;\n    ShipCity?: string;\n    ShipRegion?: string;\n    ShipPostalCode?: string;\n    ShipCountry?: string;\n    CompanyName?: string;\n    Address?: string;\n    City?: string;\n    Region?: string;\n    PostalCode?: string;\n    Country?: string;\n}\n\nexport abstract class OrdersQryRow {\n    static readonly idProperty = 'OrderId';\n    static readonly nameProperty = 'CustomerId';\n    static readonly localTextPrefix = 'Northwind.OrdersQry';\n    static readonly deletePermission = 'Administration:General';\n    static readonly insertPermission = 'Administration:General';\n    static readonly readPermission = 'Administration:General';\n    static readonly updatePermission = 'Administration:General';\n\n    static readonly Fields = fieldsProxy<OrdersQryRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib\";\nimport { OrdersQryRow } from \"./OrdersQryRow\";\n\nexport namespace OrdersQryService {\n    export const baseUrl = 'Northwind/OrdersQry';\n\n    export declare function Create(request: SaveRequest<OrdersQryRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): PromiseLike<SaveResponse>;\n    export declare function Update(request: SaveRequest<OrdersQryRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): PromiseLike<SaveResponse>;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): PromiseLike<DeleteResponse>;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<OrdersQryRow>) => void, opt?: ServiceOptions<any>): PromiseLike<RetrieveResponse<OrdersQryRow>>;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<OrdersQryRow>) => void, opt?: ServiceOptions<any>): PromiseLike<ListResponse<OrdersQryRow>>;\n\n    export const Methods = {\n        Create: \"Northwind/OrdersQry/Create\",\n        Update: \"Northwind/OrdersQry/Update\",\n        Delete: \"Northwind/OrdersQry/Delete\",\n        Retrieve: \"Northwind/OrdersQry/Retrieve\",\n        List: \"Northwind/OrdersQry/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>OrdersQryService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib\";\n\nexport interface OrdersRow {\n    OrderId?: number;\n    CustomerId?: string;\n    EmployeeId?: number;\n    OrderDate?: string;\n    RequiredDate?: string;\n    ShippedDate?: string;\n    ShipVia?: number;\n    Freight?: number;\n    ShipName?: string;\n    ShipAddress?: string;\n    ShipCity?: string;\n    ShipRegion?: string;\n    ShipPostalCode?: string;\n    ShipCountry?: string;\n    CustomerCompanyName?: string;\n    EmployeeFullName?: string;\n    ShipViaCompanyName?: string;\n}\n\nexport abstract class OrdersRow {\n    static readonly idProperty = 'OrderId';\n    static readonly nameProperty = 'CustomerId';\n    static readonly localTextPrefix = 'Northwind.Orders';\n    static readonly deletePermission = 'Administration:General';\n    static readonly insertPermission = 'Administration:General';\n    static readonly readPermission = 'Administration:General';\n    static readonly updatePermission = 'Administration:General';\n\n    static readonly Fields = fieldsProxy<OrdersRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib\";\nimport { OrdersRow } from \"./OrdersRow\";\n\nexport namespace OrdersService {\n    export const baseUrl = 'Northwind/Orders';\n\n    export declare function Create(request: SaveRequest<OrdersRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): PromiseLike<SaveResponse>;\n    export declare function Update(request: SaveRequest<OrdersRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): PromiseLike<SaveResponse>;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): PromiseLike<DeleteResponse>;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<OrdersRow>) => void, opt?: ServiceOptions<any>): PromiseLike<RetrieveResponse<OrdersRow>>;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<OrdersRow>) => void, opt?: ServiceOptions<any>): PromiseLike<ListResponse<OrdersRow>>;\n\n    export const Methods = {\n        Create: \"Northwind/Orders/Create\",\n        Update: \"Northwind/Orders/Update\",\n        Delete: \"Northwind/Orders/Delete\",\n        Retrieve: \"Northwind/Orders/Retrieve\",\n        List: \"Northwind/Orders/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>OrdersService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFimport { ColumnsBase, fieldsProxy } from \"@serenity-is/corelib\";\nimport { Column } from \"@serenity-is/sleekgrid\";\nimport { OrderSubtotalsRow } from \"./OrderSubtotalsRow\";\n\nexport interface OrderSubtotalsColumns {\n    OrderId: Column<OrderSubtotalsRow>;\n    Subtotal: Column<OrderSubtotalsRow>;\n}\n\nexport class OrderSubtotalsColumns extends ColumnsBase<OrderSubtotalsRow> {\n    static readonly columnsKey = 'Northwind.OrderSubtotals';\n    static readonly Fields = fieldsProxy<OrderSubtotalsColumns>();\n}", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib\";\n\nexport interface OrderSubtotalsRow {\n    OrderId?: number;\n    Subtotal?: number;\n}\n\nexport abstract class OrderSubtotalsRow {\n    static readonly idProperty = 'OrderId';\n    static readonly localTextPrefix = 'Northwind.OrderSubtotals';\n    static readonly deletePermission = 'Administration:General';\n    static readonly insertPermission = 'Administration:General';\n    static readonly readPermission = 'Administration:General';\n    static readonly updatePermission = 'Administration:General';\n\n    static readonly Fields = fieldsProxy<OrderSubtotalsRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib\";\nimport { OrderSubtotalsRow } from \"./OrderSubtotalsRow\";\n\nexport namespace OrderSubtotalsService {\n    export const baseUrl = 'Northwind/OrderSubtotals';\n\n    export declare function Create(request: SaveRequest<OrderSubtotalsRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): PromiseLike<SaveResponse>;\n    export declare function Update(request: SaveRequest<OrderSubtotalsRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): PromiseLike<SaveResponse>;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): PromiseLike<DeleteResponse>;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<OrderSubtotalsRow>) => void, opt?: ServiceOptions<any>): PromiseLike<RetrieveResponse<OrderSubtotalsRow>>;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<OrderSubtotalsRow>) => void, opt?: ServiceOptions<any>): PromiseLike<ListResponse<OrderSubtotalsRow>>;\n\n    export const Methods = {\n        Create: \"Northwind/OrderSubtotals/Create\",\n        Update: \"Northwind/OrderSubtotals/Update\",\n        Delete: \"Northwind/OrderSubtotals/Delete\",\n        Retrieve: \"Northwind/OrderSubtotals/Retrieve\",\n        List: \"Northwind/OrderSubtotals/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>OrderSubtotalsService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFimport { ColumnsBase, fieldsProxy } from \"@serenity-is/corelib\";\nimport { Column } from \"@serenity-is/sleekgrid\";\nimport { SalesInvoiceRow } from \"./SalesInvoiceRow\";\n\nexport interface SalesInvoiceColumns {\n    SaleInvoiceId: Column<SalesInvoiceRow>;\n    Date: Column<SalesInvoiceRow>;\n    Notes: Column<SalesInvoiceRow>;\n}\n\nexport class SalesInvoiceColumns extends ColumnsBase<SalesInvoiceRow> {\n    static readonly columnsKey = 'Northwind.SalesInvoice';\n    static readonly Fields = fieldsProxy<SalesInvoiceColumns>();\n}", "\uFEFFimport { ColumnsBase, fieldsProxy } from \"@serenity-is/corelib\";\nimport { Column } from \"@serenity-is/sleekgrid\";\nimport { SalesInvoiceItemsRow } from \"./SalesInvoiceItemsRow\";\n\nexport interface SalesInvoiceItemsColumns {\n    Id: Column<SalesInvoiceItemsRow>;\n    Date: Column<SalesInvoiceItemsRow>;\n    Notes: Column<SalesInvoiceItemsRow>;\n    SalesInvoiceNotes: Column<SalesInvoiceItemsRow>;\n}\n\nexport class SalesInvoiceItemsColumns extends ColumnsBase<SalesInvoiceItemsRow> {\n    static readonly columnsKey = 'Northwind.SalesInvoiceItems';\n    static readonly Fields = fieldsProxy<SalesInvoiceItemsColumns>();\n}", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib\";\n\nexport interface SalesInvoiceItemsRow {\n    Id?: number;\n    Date?: string;\n    Notes?: string;\n    SalesInvoiceId?: number;\n    SalesInvoiceNotes?: string;\n}\n\nexport abstract class SalesInvoiceItemsRow {\n    static readonly idProperty = 'Id';\n    static readonly nameProperty = 'Notes';\n    static readonly localTextPrefix = 'Northwind.SalesInvoiceItems';\n    static readonly deletePermission = 'Administration:General';\n    static readonly insertPermission = 'Administration:General';\n    static readonly readPermission = 'Administration:General';\n    static readonly updatePermission = 'Administration:General';\n\n    static readonly Fields = fieldsProxy<SalesInvoiceItemsRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib\";\nimport { SalesInvoiceItemsRow } from \"./SalesInvoiceItemsRow\";\n\nexport namespace SalesInvoiceItemsService {\n    export const baseUrl = 'Northwind/SalesInvoiceItems';\n\n    export declare function Create(request: SaveRequest<SalesInvoiceItemsRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): PromiseLike<SaveResponse>;\n    export declare function Update(request: SaveRequest<SalesInvoiceItemsRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): PromiseLike<SaveResponse>;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): PromiseLike<DeleteResponse>;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<SalesInvoiceItemsRow>) => void, opt?: ServiceOptions<any>): PromiseLike<RetrieveResponse<SalesInvoiceItemsRow>>;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<SalesInvoiceItemsRow>) => void, opt?: ServiceOptions<any>): PromiseLike<ListResponse<SalesInvoiceItemsRow>>;\n\n    export const Methods = {\n        Create: \"Northwind/SalesInvoiceItems/Create\",\n        Update: \"Northwind/SalesInvoiceItems/Update\",\n        Delete: \"Northwind/SalesInvoiceItems/Delete\",\n        Retrieve: \"Northwind/SalesInvoiceItems/Retrieve\",\n        List: \"Northwind/SalesInvoiceItems/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>SalesInvoiceItemsService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib\";\n\nexport interface SalesInvoiceRow {\n    SaleInvoiceId?: number;\n    Date?: string;\n    Notes?: string;\n}\n\nexport abstract class SalesInvoiceRow {\n    static readonly idProperty = 'SaleInvoiceId';\n    static readonly nameProperty = 'Notes';\n    static readonly localTextPrefix = 'Northwind.SalesInvoice';\n    static readonly deletePermission = 'Administration:General';\n    static readonly insertPermission = 'Administration:General';\n    static readonly readPermission = 'Administration:General';\n    static readonly updatePermission = 'Administration:General';\n\n    static readonly Fields = fieldsProxy<SalesInvoiceRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib\";\nimport { SalesInvoiceRow } from \"./SalesInvoiceRow\";\n\nexport namespace SalesInvoiceService {\n    export const baseUrl = 'Northwind/SalesInvoice';\n\n    export declare function Create(request: SaveRequest<SalesInvoiceRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): PromiseLike<SaveResponse>;\n    export declare function Update(request: SaveRequest<SalesInvoiceRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): PromiseLike<SaveResponse>;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): PromiseLike<DeleteResponse>;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<SalesInvoiceRow>) => void, opt?: ServiceOptions<any>): PromiseLike<RetrieveResponse<SalesInvoiceRow>>;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<SalesInvoiceRow>) => void, opt?: ServiceOptions<any>): PromiseLike<ListResponse<SalesInvoiceRow>>;\n\n    export const Methods = {\n        Create: \"Northwind/SalesInvoice/Create\",\n        Update: \"Northwind/SalesInvoice/Update\",\n        Delete: \"Northwind/SalesInvoice/Delete\",\n        Retrieve: \"Northwind/SalesInvoice/Retrieve\",\n        List: \"Northwind/SalesInvoice/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>SalesInvoiceService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFimport { IntegerEditor, StringEditor, DecimalEditor, PrefixedContext, initFormType } from \"@serenity-is/corelib\";\n\nexport interface OrderDetailsExtendedForm {\n    ProductId: IntegerEditor;\n    ProductName: StringEditor;\n    UnitPrice: DecimalEditor;\n    Quantity: IntegerEditor;\n    Discount: DecimalEditor;\n    ExtendedPrice: DecimalEditor;\n}\n\nexport class OrderDetailsExtendedForm extends PrefixedContext {\n    static readonly formKey = 'Northwind.OrderDetailsExtended';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!OrderDetailsExtendedForm.init)  {\n            OrderDetailsExtendedForm.init = true;\n\n            var w0 = IntegerEditor;\n            var w1 = StringEditor;\n            var w2 = DecimalEditor;\n\n            initFormType(OrderDetailsExtendedForm, [\n                'ProductId', w0,\n                'ProductName', w1,\n                'UnitPrice', w2,\n                'Quantity', w0,\n                'Discount', w2,\n                'ExtendedPrice', w2\n            ]);\n        }\n    }\n}", "\uFEFFimport { ServiceLookupEditor, LookupEditor, DecimalEditor, IntegerEditor, PrefixedContext, initFormType } from \"@serenity-is/corelib\";\n\nexport interface OrderDetailsForm {\n    OrderId: ServiceLookupEditor;\n    ProductId: LookupEditor;\n    UnitPrice: DecimalEditor;\n    Quantity: IntegerEditor;\n    Discount: DecimalEditor;\n}\n\nexport class OrderDetailsForm extends PrefixedContext {\n    static readonly formKey = 'Northwind.OrderDetails';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!OrderDetailsForm.init)  {\n            OrderDetailsForm.init = true;\n\n            var w0 = ServiceLookupEditor;\n            var w1 = LookupEditor;\n            var w2 = DecimalEditor;\n            var w3 = IntegerEditor;\n\n            initFormType(OrderDetailsForm, [\n                'OrderId', w0,\n                'ProductId', w1,\n                'UnitPrice', w2,\n                'Quantity', w3,\n                'Discount', w2\n            ]);\n        }\n    }\n}", "\uFEFFimport { StringEditor, LookupEditor, DateEditor, DecimalEditor, PrefixedContext, initFormType } from \"@serenity-is/corelib\";\n\nexport interface OrdersForm {\n    CustomerId: StringEditor;\n    EmployeeId: LookupEditor;\n    OrderDate: DateEditor;\n    RequiredDate: DateEditor;\n    ShippedDate: DateEditor;\n    ShipVia: LookupEditor;\n    Freight: DecimalEditor;\n    ShipName: StringEditor;\n    ShipAddress: StringEditor;\n    ShipCity: StringEditor;\n    ShipRegion: StringEditor;\n    ShipPostalCode: StringEditor;\n    ShipCountry: StringEditor;\n}\n\nexport class OrdersForm extends PrefixedContext {\n    static readonly formKey = 'Northwind.Orders';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!OrdersForm.init)  {\n            OrdersForm.init = true;\n\n            var w0 = StringEditor;\n            var w1 = LookupEditor;\n            var w2 = DateEditor;\n            var w3 = DecimalEditor;\n\n            initFormType(OrdersForm, [\n                'CustomerId', w0,\n                'EmployeeId', w1,\n                'OrderDate', w2,\n                'RequiredDate', w2,\n                'ShippedDate', w2,\n                'ShipVia', w1,\n                'Freight', w3,\n                'ShipName', w0,\n                'ShipAddress', w0,\n                'ShipCity', w0,\n                'ShipRegion', w0,\n                'ShipPostalCode', w0,\n                'ShipCountry', w0\n            ]);\n        }\n    }\n}", "\uFEFFimport { StringEditor, IntegerEditor, DateEditor, DecimalEditor, PrefixedContext, initFormType } from \"@serenity-is/corelib\";\n\nexport interface OrdersQryForm {\n    CustomerId: StringEditor;\n    EmployeeId: IntegerEditor;\n    OrderDate: DateEditor;\n    RequiredDate: DateEditor;\n    ShippedDate: DateEditor;\n    ShipVia: IntegerEditor;\n    Freight: DecimalEditor;\n    ShipName: StringEditor;\n    ShipAddress: StringEditor;\n    ShipCity: StringEditor;\n    ShipRegion: StringEditor;\n    ShipPostalCode: StringEditor;\n    ShipCountry: StringEditor;\n    CompanyName: StringEditor;\n    Address: StringEditor;\n    City: StringEditor;\n    Region: StringEditor;\n    PostalCode: StringEditor;\n    Country: StringEditor;\n}\n\nexport class OrdersQryForm extends PrefixedContext {\n    static readonly formKey = 'Northwind.OrdersQry';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!OrdersQryForm.init)  {\n            OrdersQryForm.init = true;\n\n            var w0 = StringEditor;\n            var w1 = IntegerEditor;\n            var w2 = DateEditor;\n            var w3 = DecimalEditor;\n\n            initFormType(OrdersQryForm, [\n                'CustomerId', w0,\n                'EmployeeId', w1,\n                'OrderDate', w2,\n                'RequiredDate', w2,\n                'ShippedDate', w2,\n                'ShipVia', w1,\n                'Freight', w3,\n                'ShipName', w0,\n                'ShipAddress', w0,\n                'ShipCity', w0,\n                'ShipRegion', w0,\n                'ShipPostalCode', w0,\n                'ShipCountry', w0,\n                'CompanyName', w0,\n                'Address', w0,\n                'City', w0,\n                'Region', w0,\n                'PostalCode', w0,\n                'Country', w0\n            ]);\n        }\n    }\n}", "\uFEFFimport { DecimalEditor, PrefixedContext, initFormType } from \"@serenity-is/corelib\";\n\nexport interface OrderSubtotalsForm {\n    Subtotal: DecimalEditor;\n}\n\nexport class OrderSubtotalsForm extends PrefixedContext {\n    static readonly formKey = 'Northwind.OrderSubtotals';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!OrderSubtotalsForm.init)  {\n            OrderSubtotalsForm.init = true;\n\n            var w0 = DecimalEditor;\n\n            initFormType(OrderSubtotalsForm, [\n                'Subtotal', w0\n            ]);\n        }\n    }\n}", "\uFEFFimport { DateEditor, StringEditor, PrefixedContext, initFormType } from \"@serenity-is/corelib\";\n\nexport interface SalesInvoiceForm {\n    Date: DateEditor;\n    Notes: StringEditor;\n}\n\nexport class SalesInvoiceForm extends PrefixedContext {\n    static readonly formKey = 'Northwind.SalesInvoice';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!SalesInvoiceForm.init)  {\n            SalesInvoiceForm.init = true;\n\n            var w0 = DateEditor;\n            var w1 = StringEditor;\n\n            initFormType(SalesInvoiceForm, [\n                'Date', w0,\n                'Notes', w1\n            ]);\n        }\n    }\n}", "\uFEFFimport { DateEditor, StringEditor, ServiceLookupEditor, PrefixedContext, initFormType } from \"@serenity-is/corelib\";\n\nexport interface SalesInvoiceItemsForm {\n    Date: DateEditor;\n    Notes: StringEditor;\n    SalesInvoiceId: ServiceLookupEditor;\n}\n\nexport class SalesInvoiceItemsForm extends PrefixedContext {\n    static readonly formKey = 'Northwind.SalesInvoiceItems';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!SalesInvoiceItemsForm.init)  {\n            SalesInvoiceItemsForm.init = true;\n\n            var w0 = DateEditor;\n            var w1 = StringEditor;\n            var w2 = ServiceLookupEditor;\n\n            initFormType(SalesInvoiceItemsForm, [\n                'Date', w0,\n                'Notes', w1,\n                'SalesInvoiceId', w2\n            ]);\n        }\n    }\n}"],
  "mappings": "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",
  "names": ["import_corelib", "_OrderDetailsColumns", "__name", "OrderDetailsColumns", "import_corelib", "_OrderDetailsExtendedColumns", "__name", "OrderDetailsExtendedColumns", "import_corelib", "_OrderDetailsExtendedRow", "__name", "OrderDetailsExtendedRow", "import_corelib", "OrderDetailsExtendedService", "x", "r", "s", "o", "import_corelib", "_OrderDetailsRow", "__name", "OrderDetailsRow", "import_corelib", "OrderDetailsService", "x", "r", "s", "o", "import_corelib", "_OrdersColumns", "__name", "OrdersColumns", "import_corelib", "_OrdersQryColumns", "__name", "OrdersQryColumns", "import_corelib", "_OrdersQryRow", "__name", "OrdersQryRow", "import_corelib", "OrdersQryService", "x", "r", "s", "o", "import_corelib", "_OrdersRow", "__name", "OrdersRow", "import_corelib", "OrdersService", "x", "r", "s", "o", "import_corelib", "_OrderSubtotalsColumns", "__name", "OrderSubtotalsColumns", "import_corelib", "_OrderSubtotalsRow", "__name", "OrderSubtotalsRow", "import_corelib", "OrderSubtotalsService", "x", "r", "s", "o", "import_corelib", "_SalesInvoiceColumns", "__name", "SalesInvoiceColumns", "import_corelib", "_SalesInvoiceItemsColumns", "__name", "SalesInvoiceItemsColumns", "import_corelib", "_SalesInvoiceItemsRow", "__name", "SalesInvoiceItemsRow", "import_corelib", "SalesInvoiceItemsService", "x", "r", "s", "o", "import_corelib", "_SalesInvoiceRow", "__name", "SalesInvoiceRow", "import_corelib", "SalesInvoiceService", "x", "r", "s", "o", "import_corelib", "_OrderDetailsExtendedForm", "prefix", "w0", "w1", "w2", "__name", "OrderDetailsExtendedForm", "import_corelib", "_OrderDetailsForm", "prefix", "w0", "w1", "w2", "w3", "__name", "OrderDetailsForm", "import_corelib", "_OrdersForm", "prefix", "w0", "w1", "w2", "w3", "__name", "OrdersForm", "import_corelib", "_OrdersQryForm", "prefix", "w0", "w1", "w2", "w3", "__name", "OrdersQryForm", "import_corelib", "_OrderSubtotalsForm", "prefix", "w0", "__name", "OrderSubtotalsForm", "import_corelib", "_SalesInvoiceForm", "prefix", "w0", "w1", "__name", "SalesInvoiceForm", "import_corelib", "_SalesInvoiceItemsForm", "prefix", "w0", "w1", "w2", "__name", "SalesInvoiceItemsForm"]
}
